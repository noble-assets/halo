syntax = "proto3";

package halo.aggregator.v1;

import "amino/amino.proto";
import "cosmos/query/v1/query.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/noble-assets/halo/v2/types/aggregator";

service Query {
  rpc Owner(QueryOwner) returns (QueryOwnerResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/halo/aggregator/v1/owner";
  }

  rpc NextPrice(QueryNextPrice) returns (QueryNextPriceResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/halo/aggregator/v1/next_price";
  }

  rpc RoundData(QueryRoundData) returns (QueryRoundDataResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/halo/aggregator/v1/round_data/{round_id}";
  }
  rpc LatestRoundData(QueryLatestRoundData) returns (QueryRoundDataResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/halo/aggregator/v1/round_data";
  }

  rpc RoundDetails(QueryRoundDetails) returns (QueryRoundDetailsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/halo/aggregator/v1/round_details/{round_id}";
  }
  rpc LatestRoundDetails(QueryLatestRoundDetails) returns (QueryRoundDetailsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/halo/aggregator/v1/round_details";
  }
}

//

message QueryOwner {}

message QueryOwnerResponse {
  string owner = 1;
}

message QueryNextPrice {}

message QueryNextPriceResponse {
  string next_price = 1 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryRoundData {
  uint64 round_id = 1;
}

message QueryLatestRoundData {}

message QueryRoundDataResponse {
  uint64 round_id = 1;
  string answer = 2 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  int64 started_at = 3;
  int64 updated_at = 4;
  uint64 answered_in_round = 5;
}

message QueryRoundDetails {
  uint64 round_id = 1;
}

message QueryLatestRoundDetails {}

message QueryRoundDetailsResponse {
  uint64 round_id = 1;
  string balance = 2 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string interest = 3 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string total_supply = 4 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  int64 updated_at = 5;
}
